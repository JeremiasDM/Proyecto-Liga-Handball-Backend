import React, { useState } from "react";
import type { Referente } from "../types/types";
import { validarReferente } from "../utils/validaciones";
// ðŸ›‘ Importamos los estilos del archivo principal
import { styles } from "./ReferentesPage"; 

type Props = {
Â  onGuardar: (referente: Referente) => void;
};

const categorias = ["Masculino", "Femenino"];

const RegistrarReferente: React.FC<Props> = ({ onGuardar }) => {
Â  const [form, setForm] = useState<Referente>({
Â  Â  id: Date.now(),
Â  Â  nombre: "",
Â  Â  apellido: "",
Â  Â  categoria: "Masculino",
Â  Â  dni: "",
Â  Â  correo: "",
Â  Â  equipo: "",
Â  });
Â  
Â  const [mensaje, setMensaje] = useState<{ tipo: 'error' | 'exito', texto: string } | null>(null);

Â  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
Â  Â  const { name, value } = e.target;
Â  Â  setForm({ ...form, [name]: value });
Â  Â  if (mensaje) setMensaje(null); 
Â  };

Â  const handleSubmit = (e: React.FormEvent) => {
Â  Â  e.preventDefault();
Â  Â  // NOTA: 'validarReferente(form, [])' solo valida el formato, no la unicidad.
Â  Â  const error = validarReferente(form, []); 

Â  Â  if (error) {
Â  Â  Â  setMensaje({ tipo: 'error', texto: error });
Â  Â  Â  return;
Â  Â  }
Â  Â  
Â  Â  onGuardar({ ...form, id: Date.now() });
Â  Â  // El mensaje de Ã©xito ya no es tan relevante, ya que la vista cambiarÃ¡ automÃ¡ticamente
Â  Â  // Pero lo dejamos para la validaciÃ³n de formato
Â  Â  setMensaje({ tipo: 'exito', texto: `Referente ${form.nombre} guardado exitosamente.` });
Â  Â  
Â  Â  // Resetear formulario
Â  Â  setForm({
Â  Â  Â  id: Date.now(),
Â  Â  Â  nombre: "",
Â  Â  Â  apellido: "",
Â  Â  Â  categoria: "Masculino",
Â  Â  Â  dni: "",
Â  Â  Â  correo: "",
Â  Â  Â  equipo: "",
Â  Â  });
Â  };

Â  return (
Â  Â  <div>
Â  Â  Â  <h2 style={styles.formTitulo}>
Â  Â  Â  Â  Registro de Referente
Â  Â  Â  </h2>

Â  Â  Â  {/* Mensajes de ValidaciÃ³n/Ã‰xito - Usando estilos en lÃ­nea centralizados */}
Â  Â  Â  {mensaje && (
Â  Â  Â  Â  <div 
Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  ...styles.mensajeAlerta,
Â  Â  Â  Â  Â  Â  ...(mensaje.tipo === 'error' ? styles.mensajeError : styles.mensajeExito),
Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  {mensaje.texto}
Â  Â  Â  Â  </div>
Â  Â  Â  )}

Â  Â  Â  <form onSubmit={handleSubmit} className="space-y-4"> 
Â  Â  Â  Â  
Â  Â  Â  Â  {/* AgrupaciÃ³n Nombre y Apellido */}
Â  Â  Â  Â  <div 
Â  Â  Â  Â  Â  Â  style={{ 
Â  Â  Â  Â  Â  Â  Â  Â  display: 'flex', 
Â  Â  Â  Â  Â  Â  Â  Â  gap: '16px',
Â  Â  Â  Â  Â  Â  Â  Â  // ðŸš€ CAMBIO: Agregar margen inferior para separarlo del siguiente campo (CategorÃ­a)
Â  Â  Â  Â  Â  Â  Â  Â  marginBottom: '16px' 
Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  > 
Â  Â  Â  Â  Â  <input 
Â  Â  Â  Â  Â  Â  name="nombre" 
Â  Â  Â  Â  Â  Â  placeholder="Nombre" 
Â  Â  Â  Â  Â  Â  value={form.nombre} 
Â  Â  Â  Â  Â  Â  onChange={handleChange} 
Â  Â  Â  Â  Â  Â  // ðŸ›‘ APLICACIÃ“N DEL ESTILO OSCURO
Â  Â  Â  Â  Â  Â  style={{ ...styles.inputOscuro, flex: 1, marginBottom: 0 }} // Ajuste de marginBottom
Â  Â  Â  Â  Â  Â  required 
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  <input 
Â  Â  Â  Â  Â  Â  name="apellido" 
Â  Â  Â  Â  Â  Â  placeholder="Apellido" 
Â  Â  Â  Â  Â  Â  value={form.apellido} 
Â  Â  Â  Â  Â  Â  onChange={handleChange} 
Â  Â  Â  Â  Â  Â  // ðŸ›‘ APLICACIÃ“N DEL ESTILO OSCURO
Â  Â  Â  Â  Â  Â  style={{ ...styles.inputOscuro, flex: 1, marginBottom: 0 }} // Ajuste de marginBottom
Â  Â  Â  Â  Â  Â  required 
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  </div>

Â  Â  Â  Â  {/* Categoria */}
Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  <select 
Â  Â  Â  Â  Â  Â  name="categoria" 
Â  Â  Â  Â  Â  Â  value={form.categoria} 
Â  Â  Â  Â  Â  Â  onChange={handleChange} 
Â  Â  Â  Â  Â  Â  // ðŸ›‘ APLICACIÃ“N DEL ESTILO OSCURO
Â  Â  Â  Â  Â  Â  style={styles.inputOscuro}
Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <option value="" disabled>â€” Seleccione CategorÃ­a â€”</option>
Â  Â  Â  Â  Â  Â  {categorias.map(c => <option key={c} value={c}>{c}</option>)}
Â  Â  Â  Â  Â  </select>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  {/* DNI */}
Â  Â  Â  Â  <input 
Â  Â  Â  Â  Â  name="dni" 
Â  Â  Â  Â  Â  type="text" 
Â  Â  Â  Â  Â  placeholder="DNI (sin puntos)" 
Â  Â  Â  Â  Â  value={form.dni} 
Â  Â  Â  Â  Â  onChange={handleChange} 
Â  Â  Â  Â  Â  // ðŸ›‘ APLICACIÃ“N DEL ESTILO OSCURO
Â  Â  Â  Â  Â  style={styles.inputOscuro}
Â  Â  Â  Â  Â  required 
Â  Â  Â  Â  />
Â  Â  Â  Â  
Â  Â  Â  Â  {/* Correo */}
Â  Â  Â  Â  <input 
Â  Â  Â  Â  Â  name="correo" 
Â  Â  Â  Â  Â  type="email" 
Â  Â  Â  Â  Â  placeholder="Correo ElectrÃ³nico" 
Â  Â  Â  Â  Â  value={form.correo} 
Â  Â  Â  Â  Â  onChange={handleChange} 
Â  Â  Â  Â  Â  // ðŸ›‘ APLICACIÃ“N DEL ESTILO OSCURO
Â  Â  Â  Â  Â  style={styles.inputOscuro}
Â  Â  Â  Â  Â  required 
Â  Â  Â  Â  />
Â  Â  Â  Â  
Â  Â  Â  Â  {/* Equipo */}
Â  Â  Â  Â  <input 
Â  Â  Â  Â  Â  name="equipo" 
Â  Â  Â  Â  Â  placeholder="Equipo" 
Â  Â  Â  Â  Â  value={form.equipo} 
Â  Â  Â  Â  Â  onChange={handleChange} 
Â  Â  Â  Â  Â  // ðŸ›‘ APLICACIÃ“N DEL ESTILO OSCURO
Â  Â  Â  Â  Â  style={styles.inputOscuro}
Â  Â  Â  Â  Â  required 
Â  Â  Â  Â  />
Â  Â  Â  Â  
Â  Â  Â  Â  {/* BotÃ³n de Enviar */}
Â  Â  Â  Â  <button 
Â  Â  Â  Â  Â  type="submit" 
Â  Â  Â  Â  Â  // ðŸ›‘ APLICACIÃ“N DEL ESTILO PRIMARIO
Â  Â  Â  Â  Â  style={styles.botonPrimario}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Guardar Referente
Â  Â  Â  Â  </button>
Â  Â  Â  </form>
Â  Â  </div>
Â  );
};

export default RegistrarReferente;
